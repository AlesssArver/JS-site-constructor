{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["row","content","styles","background","color","css","col","marginTop","marginBottom","style","toString","value","Object","keys","map","join","block","type","fetch","then","r","text","data","console","log","Block","options","Error","TextBlock","tag","ColumnsBlock","html","ImageBlock","is","imageStyles","alt","model","padding","image","display","width","height","Site","selector","el","document","querySelector","innerHTML","forEach","insertAdjacentHTML","toHTML","Sidebar","updateCallback","e","preventDefault","target","newBlock","update","init","template","addEventListener","add","App","site","render","push","bundleURL","getBundleURLCached","getBundleURL","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"AOAA,ACAA,IDAIkE,ACAAW,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSX,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEhB,ADFJ,ICEIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADa,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFFJ,IEEIA,IAAI,CAACI,MAAL;ADCF,ACAC,AHNH,AJAA,AGAA,AFAA,AFAO,GQIL,CRJWpF,GAAG,EOMPkE,CPNU,QOMjB,CPNWlE,GAAM,CAACC,OAAD,EAKb;AOEL,ADDD,ANDM,IMCF6D,ENNyB5D,MMM7B,ANDM,CMCEkC,YAAR,EAAesB,IAAf,oDNNsC;AQOpCuB,AHNF,ADAA,AFAA,AFAI9E,EQMF8E,ERNE9E,KQMK,CAACkF,IAAR,ARNY,EAAE,CQMCL,CRPqB,GQOjB,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDER,ARNE5E,EQMF4E,ERNE5E,EQME,CAACqF,EDCErB,APPA,EAAE,EAF2B,IQQpC,CAAgBsB,GDClB,GAAwB,MCDtB,CAA6BT,OAA7B,EAAsCD,IAAI,CAACW,WAA3C;ADEA,ACDD,ARNG,kBAAc,EAHoB;AOWpC,APPE,MOOE,ePPe;AOQjB,ACDJ,ANRO,AFH+B,GAKhC,CQMFC,ALXSlD,ADGAN,KAAK,CKSR,ELTW,CACjB,CKQUT,ACDA,GAAG,ANPTC,EKQE,EAAN,ACDJ,aNPI,CAAc,OAAd,EAAuB;AKSxB,AJZC,ADIIC,AFCJ,EEDIA,CKMN,CAEE,CLRO,EAAE,IKQFwC,ALTgB,GKSvB,EAAY,AJZA1B,QAAZ,EAAsB,0BHMItC,GAAG,CAACH,MAAD,CAD7B,0BAEMD,OAFN;AOQA,ACFJ,ALX0B,ADKlBC,AFKP,CAXM,CEMCA,MKQAoE,ALRM,CMMLuB,CNNO,KKQD,GAAG,ACFlB,CDEmB,ECFE,GDEGxB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,ANNUpE,IAAAA,EMMNwF,GNNW,EAAE,KMMjB,EAAgB,ENPF;AKSZ,ACDA,ALZI,ADMIvD,IGLCyB,AHKDzB,IKOJiC,CJbK1B,EAAL,ADMW,EAAE,CCNHC,CIad,EAAa,KJbS,CAACC,aAAT,CAAuBH,QAAvB,CAAV;AIcF,ACDH,AHXC,AFDC,ADGW,aKUH8B,EFZGrC,KAAZ,EAAmB,CEYA,CAACkC,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,AFbkB,AHAI,AFSpB,CETH,CADiB,EEARnB,AFQT,AFES7C,GAAG,CEFRsB,EFEW,SAANtB,GAAM,CAACL,EEFhB,CAAc,IFEC,EAKb,oIEPF,EAA0J;AKO3J,ACDD2F,AJbE,AFQI/D,AFMF,EQDJ+D,ANLM/D,GAAG,CFCkB3B,CEDhB,GADiJ,EMMlJ,ARCN,GQDS4F,IJbCnD,MIaS,CAAC,CJbtB,EAAsBS,SIaY,KJblC,EAAsC,sCJSJ;AQKlC,AHbI,ADDkC,AFSlClD,AFCJC,EEDID,EFCJC,IQII4F,ANLM,CGRD3D,CHQG,GMKH,CHbL,ALSM,EQIES,ARJA,CKTKT,CLQiB,IKR9B,EGagB,CAAC4D,gBAAT,CAA0B,wBAA1B,CAAZ;ADEF,AFdG,AHQO3D,AFCRjC,IEDQiC,AFCRjC,KOKK,APLA,EEDU,AFCR,COKT,CLNmB,AFDiB,cGR3BgC,OAAO;AIgBjB,ACFG,AJfsC,ADCxB,ADQF,AFGZ7B,IAAAA,KQGK,IAAI0F,ARHA,CQGC,CRHC,EQGE,ARNqB,CQMlC,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,ANTwJ,AFM1JzF,CENA,CARiB,EAcjB,AFAAA,IEAIsB,EMGE+C,MAAM,ARHA,CQGCJ,CRHC,SQGR,CAAkBsB,ANHxB,CAAiB,CACb,GMEyB,CAACE,CAAD,CAAL,CAASZ,ANHhB,EAEb,EMCE,KNHW,CMG0BR,CNAvC,KMA6C,CAACT,CNHjC,CAAjB,EAIG,QMDwC,EAAzC,EAAgE;ADGtE,ACFQW,AJjBkC,ADElC,ADgBA7E,AFT8B,EES9BA,CFJF,KQGE6E,ANCM,CKCLN,CLDO,CChBH7B,EAAL,CAAQG,IKeE,CDElB,ACFmBgD,CDECrB,GAApB,AJjBQ,CKegB,CDEC,ACFAuB,CAAD,ALfI,CKeV,CAAV,ALfA,KCiBE,UAAC5C,CAAD,EAAO;AGCf,ACFK,AJECA,ADjBAjB,ADgBIC,AFJR,IEIQA,EECJgB,ADjBAjB,CCiBC,CAACkB,CGAD,CAAC,CJjBG,ADgBM,CChBLN,CDgBO,EKCN0B,GAAN,CJjBD,CIiBYC,AJjBE,ECiBd,KGAC,AFhBE,CEgBiB,EJjBN3D,KAAK,EAAI,sBHaMX,GAAG,CAACH,MAAD,CADpC,4BOKK,EAA2F,APHtFD,IOGL,GPLL,COKwG,GAA1G;AACD,ACFI,AHfM,ADkBH,ADlBI,ADcI,AFEf,CAXM,OGLK,ECkBEgB,GDlBE,CCkBE,ADlBD2B,EAAL,CCkBSS,ADlBDJ,CCkBE,CAACM,MAAF,CAAStC,IAAtB,KDlBI,CAA2B,WAA3B,EAAwCD,KAAK,CAACkC,MAAN,EAAxC;ACmBJ,ADlBC,ADYF,CAJH,CAdiB,EAuBjB,GCnBI,CDmBAlB,EECMH,GAAG,GAAGwB,CAAC,CAACE,MAAF,CAAS1B,CFDzB,CAAeS,CECC,CAAa3B,KAAzB,OFDJ,EAAsB;AKC1BiE,ACFIgB,AHhBI,ADmBA,ADlBH,ADiBG1F,EAAAA,EMFJ0F,GDEG,CAACxB,ALAM,EGlBAL,ADmBApD,AFDE,IMFF,AHhBI,CDmBC,EIHF,AHhBI,CDmBC0C,CAAC,CGDvB,AHCwBE,CIHpB,AHhBqBb,EEkBFyB,GHCD,CAASxD,ICnBV,CAAS,ADmBR,CAAeA,KAA7B,CCnBa,CAAb,CEkBR;AACAiE,ACFG,AHfKb,ADkBA,AFDI1B,GMXa,CNWbA,CMFP,CHfG0B,CEiBD,ACXkB,CDWjBU,ACXN,EHNU,ADkBEtE,CClBD6D,AHiBM,EAAE,IGjBb,CEiBR,AFjBoB,EDkBI,CGDHS,ALDL,EGhBSrC,ADkBEiB,CAAC,CAACE,GClBrB,GEiBR,AHC2B,CAASpD,UAAT,CAAoBQ,KAAvC;AIFP,AJGO,AFDI4B,AFHL,ICxBDd,AC2BMc,AFHClC,GAAG,GIIFD,AJJK,CEGA,EAAE,EECF,GAAGiD,CAAC,AFHP,AFDHhD,CIIWkD,EJJL,GAAiB,CIId,CAASnD,KAAT,CAAeO,KAA7B;ACjBA,AJVJ,AG4BI,AFDI,AFJwB,MAAhBT,IKbNkD,ADkBA7C,EJLsB,KCvBpBI,EG4BO,GH5BnB,AG4BsB0C,CAAC,AFDI,CGjBH,AJVL3B,AG4BK6B,GClBG,GDkBL,CH5BtB,AG4B+BhD,EH5BH,GIUlB6C,IDkBY,CAAmBzC,KAArC,IClBuB,CAAA6C,QAAQ,EAAI,sBLad,EAAO;AQGpC2C,AHfY,AJXoB,AG6BxB,AFLQ,GADU,GMGpB,CAACvB,CHfK,EDkBEpE,GClBE,CGehB,AHfiB4B,GGeAyD,EHfL,CAAW5B,EDkBG,EClBd,CAAgBT,ADkBCH,CIH7B,AJG8B,CAACE,MClBnB,ADkBiB,CAAS/C,YAAT,CAAsBG,KAA3C;AAEA,AFFAuB,AFLJ,EEKIA,IFLA,IIOMhC,GFFK,AFLJO,EEKM,CEED,EJPZ,CIOe,IJPE,OAArB,EAA8B;AKZtBsD,AJXJ,AG+BI5D,AFFAqC,AFLJ,IEKIA,IGlBAuB,ADoBA5D,CH/BCQ,AC6BI,EAAE,AFLJT,CKbC,CAAC8D,CJXT,GAAarD,ADwBb,CIOc,AFHD,CGjBT,CAAY,ADoBZR,EH/BJ,GIWoB,CAACiC,IDmBN,CCnBX;AACH,AJXD,AG+BIhC,AFFAqC,AFLP,IEKOA,GGrBJ,CDuBIrC,CH/BCsB,CC6BK,EAAE,CEEH,EAALtB,CH/BJ,GAAesB,CG6BA,MH7Bf;AACH,AG+BO,AFLS,GANK,mBEWAnB,SAHH;ACjBf,ADqBI,AFFJ4B,AFNJ,EEMIA,GAAG,CFNDzB,CEMG,GGnBDyC,ILaM,GAAG,QIQQ3C,CCrBrB,ALaEE,CKbU,OLaC,CKbb,ALaaC,EKbSyC,GLaJ,WKblB;AACH,ADgBkB,AFRG,AFIA,CEJtB,CAvBiB,CAAd,IE+BC,cJJyBzC,KAAP,eAAiBT,MAAM,CAACS,KAAD,CAAvB;AIWlB,AJXkB,GAAtB,OIWQ6C,QAAJ;6BHjCK;AACL,AGkCA,AJZJ,SAAO5C,CIYCK,EHlCE,EGkCE,CJZC,CCtBCU,ADsBAd,GIYG,CJZV,CCtBG,ADsBSX,CCtBC,GGkChB,EAAqB,AJZlB,EAAoBY,GAApB,CAAwBJ,QAAxB,EAAkCK,IAAlC,CAAuC,GAAvC,CAAP,ECtBU,CAAN;AACH,AGkCOyC,AJZX,CANM,OIkBKA,QAAQ,GAAG,IAAI5B,iBAAJ,CAAcjB,KAAd,EAAqB;AAAEkB,UAAAA,GAAG,EAAHA,GAAF;AAAO3B,UAAAA,MAAM,EAANA;AAAP,SAArB,CAAX;AACH,AJXF,IAAMc,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAC3BC,EAAAA,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACU,UAAAC,CAAC;AIWP,AJXO,ICvBFQ,EGkCL,KAAI,AJXOR,CIWNqC,AJXO,CAACpC,IAAF,CIWX,CAAYmC,AJXL,QIWP;AJXO,GADX,EAEKrC,IAFL,CAEU,UAAAG,IAAI;AIYV+B,AJZU,MIYVA,CAAC,CAACE,GJZYhC,GIYd,CAASZ,GJZY,CAACa,CIYtB,CAAeb,CJZD,CAAYW,GIY1B,CJZc,CAAJ,CIYa,EAAvB;AACA+B,AJbU,GAFd,GIeIA,CAAC,CAACE,MAAF,CAASrD,MAAT,GAAkB,EAAlB;AACH,AJZD,KInCsC,4KJwCXe,IAL3B,oFAOyBA,IAPzB,oCAQgBA,IARhB,yFAUkDA,IAVlD,qBAU+DA,IAV/D,kCAWcA,IAXd;ACzBA,AD4EH,CAxDM,oBCpBSN,KAAZ,EAAmBe,OAAnB,EAA4B;AAAA,AGTxB,SAAKkB,EAAL,GAAUC,QAAQ,CAACC,aAAT,CAAuBH,QAAvB,CAAV;AACA,SAAKc,MAAL,GAAcL,cAAd;AHQwB,AGNxB,SAAKM,IAAL,gBHOM/C,KADkB,EACXe,OADW;AAE3B,AGPA;;;;2BAEM,EHOE;AAAA,AGNL,WAAKkB,EAAL,CAAQK,YHOsB,KAAKvB,CGPnC,CAA2B,KHMtB,OGNL,EAAyC,KAAKiC,QAA9C;AHMK,AGLL,WAAKf,EAAL,CAAQgB,gBAAR,CAAyB,QAAzB,EAAmC,GHM3B/B,EGNgCgC,CHKnC,EGLL;AHKK,AGJR,UHKWhC,GADH,kCACS,GADT;AAAA,UACc3B,MADd,iBACcA,MADd;AAEL,aAAO,gBAAI,2BAAQ2B,GAAR,cAAe,KAAKlB,KAApB,eAA8BkB,GAA9B,OAAJ,EAA2C3B,MAA3C,CAAP;AACH,wBGLc;AACX,aAAO,CACH,kBAAM,MAAN,CADG,CAEH;AAFG,QAGLa,IAHK,CAGA,EAHA,CAAP;AAIH;EHR0BU;;;;IAWlBK;;;;;AACT,wBAAYnB,KAAZ,EAAmBe,OAAnB,EAA4B;AAAA;;AAAA,8BAClBf,KADkB,EACXe,OADW;AAE3B;;;;6BAEQ;AAAA,UACGxB,MADH,GACc,KAAKwB,OADnB,CACGxB,MADH;AAEL,UAAI6B,IAAI,GAAG,KAAKpB,KAAL,CAAWG,GAAX,CAAeR,UAAf,EAAoBS,IAApB,CAAyB,EAAzB,CAAX;AACA,aAAO,gBAAIgB,IAAJ,EAAU7B,MAAV,CAAP;AACH;;;;EAT6BuB;;;;IAYrBO;;;;;AACT,sBAAYrB,KAAZ,EAAmBe,OAAnB,EAA4B;AAAA;;AAAA,8BAClBf,KADkB,EACXe,OADW;AAE3B;;;;6BAEQ;AAAA,2BACyC,KAAKA,OAD9C;AAAA,UACGxB,MADH,kBACGA,MADH;AAAA,UACwB+B,EADxB,kBACWC,WADX;AAAA,8CAC4BC,GAD5B;AAAA,UAC4BA,GAD5B,mCACkC,EADlC;AAEL,aAAO,4DAEI,KAAKxB,KAFT,oCAGIwB,GAHJ,sCAIM,gBAAIF,EAAJ,CAJN,sBAKF/B,MALE,CAAP;AAMH;;;;EAb2BuB","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["export const row = (content, styles = {\r\n    background: '',\r\n    color: '',\r\n    'margin-top': '',\r\n    'margin-bottom': ''\r\n}) => {\r\n    return `\r\n    <div class=\"row\" style=\"${css(styles)}\">\r\n        ${content}\r\n    </div>\r\n`\r\n}\r\n\r\nexport const col = (content, styles = {\r\n    background: '',\r\n    color: '',\r\n    marginTop: '',\r\n    marginBottom: ''\r\n}) => {\r\n    return `\r\n        <div class=\"col-sm\" style=\"${css(styles)}\">\r\n            ${content}\r\n        </div>\r\n    `\r\n}\r\n\r\nexport const css = (styles = {}) => {\r\n    if (typeof style === 'sting') {\r\n        return styles\r\n    }\r\n    const toString = value => `${value}: ${styles[value]}`\r\n    return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\nexport const block = (type) => {\r\n    fetch('./form.html')\r\n        .then(r => r.text())\r\n        .then(data => console.log(data))\r\n\r\n    return `\r\n        <button\r\n            class=\"btn btn-primary\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#${type}\" \r\n            aria-expanded=\"false\" \r\n            aria-controls=\"${type}\">\r\n            Open: ${type}\r\n        </button>\r\n        <form class=\"collapse multi-collapse\" name=\"${type}\" id=\"${type}\">\r\n            <h5>${type}</h5>\r\n            <div class=\"mb-3\">\r\n                <input class=\"form-control form-control-md\" name=\"value\" placeholder=\"Text\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <select class=\"form-select\" name=\"tag\" aria-label=\"Default select example\">\r\n                    <option selected>Tag</option>\r\n                    <option value=\"h1\">h1</option>\r\n                    <option value=\"h2\">h2</option>\r\n                    <option value=\"h3\">h3</option>\r\n                    <option value=\"h4\">h4</option>\r\n                    <option value=\"h5\">h5</option>\r\n                    <option value=\"h6\">h6</option>\r\n                    <option value=\"p\">p</option>\r\n                    <option value=\"span\">span</option>\r\n                    <option value=\"div\">div</option>\r\n                </select>\r\n            </div>\r\n            <h4>Margin</h4>\r\n            <div class=\"form-group mb-3 row\">\r\n                <div class=\"col\">\r\n                    <input class=\"form-control form-control-md\" name=\"marginTop\" placeholder=\"top\">\r\n                </div>\r\n                <div class=\"col\">\r\n                    <input class=\"form-control form-control-md\" name=\"marginBottom\" placeholder=\"bottom\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group mb-3 row\">\r\n                <div class=\"col\">\r\n                    <label for=\"background\" class=\"col-form-label\">Background</label>\r\n                    <input type=\"color\" class=\"form-control form-control-md\" name=\"background\" id=\"background\" placeholder=\"Background\">\r\n                </div>\r\n                <div class=\"col\">\r\n                    <label for=\"color\" class=\"col-form-label\">Text color</label>\r\n                    <input type=\"color\" class=\"form-control form-control-md\" name=\"color\" id=\"color\" placeholder=\"Color\">\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"add--btn btn btn-primary btn-sm\">Add</button>\r\n        </form>\r\n    `\r\n}","import { row, col, css } from '../utils'\r\n\r\nclass Block {\r\n    constructor(value, options) {\r\n        this.value = value\r\n        this.options = options\r\n    }\r\n\r\n    toHTML() {\r\n        throw new Error('Method toHTML must be released')\r\n    }\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const { tag = 'p', styles } = this.options\r\n        return row(col(`<${tag}>${this.value}</${tag}>`), styles)\r\n    }\r\n}\r\n\r\nexport class ColumnsBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const { styles } = this.options\r\n        let html = this.value.map(col).join('')\r\n        return row(html, styles)\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const { styles, imageStyles: is, alt = \"\" } = this.options\r\n        return row(`\r\n        <img\r\n            src=\"${this.value}\" \r\n            alt=\"${alt}\" \r\n            style=\"${css(is)}\" \r\n        />`, styles)\r\n    }\r\n}","import image from './assets/image.jpg'\r\nimport { TitleBlock, TextBlock, ColumnsBlock, ImageBlock } from './classes/blocks'\r\n\r\nexport const model = [\r\n    new TextBlock('Title', {\r\n        tag: 'h1',\r\n        styles: {\r\n            color: '#2d2d2d',\r\n            padding: '1.5rem'\r\n        }\r\n    }),\r\n    new TextBlock('There very long some text. Very interesting text.Very cool text.You reading this text and want to sleep, because It\\'s very boring text.', {\r\n        tag: 'p',\r\n        styles: {\r\n            padding: '1rem',\r\n        }\r\n    }),\r\n    new ColumnsBlock([\r\n        '11111',\r\n        '22222',\r\n        '33333',\r\n    ], {\r\n        styles: {\r\n            padding: '2rem'\r\n        }\r\n    }),\r\n    new ImageBlock(image, {\r\n        styles: {\r\n            padding: '2rem 0',\r\n            display: 'flex',\r\n            'justify-content': 'center'\r\n        },\r\n        imageStyles: {\r\n            width: '500px',\r\n            height: 'auto'\r\n        },\r\n        alt: 'Это картинка'\r\n    })\r\n]","export class Site {\r\n    constructor(selector) {\r\n        this.el = document.querySelector(selector)\r\n    }\r\n\r\n    render(model) {\r\n        this.el.innerHTML = ''\r\n        model.forEach(block => {\r\n            this.el.insertAdjacentHTML('beforeend', block.toHTML())\r\n        })\r\n    }\r\n}","import { TitleBlock, TextBlock } from './blocks'\r\nimport { block } from '../utils'\r\n\r\nexport class Sidebar {\r\n    constructor(selector, updateCallback) {\r\n        this.el = document.querySelector(selector)\r\n        this.update = updateCallback\r\n\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.el.insertAdjacentHTML('afterbegin', this.template)\r\n        this.el.addEventListener('submit', this.add)\r\n    }\r\n\r\n    get template() {\r\n        return [\r\n            block('text'),\r\n            // block('columns'),\r\n        ].join('')\r\n    }\r\n\r\n    add = (e) => {\r\n        e.preventDefault()\r\n\r\n        const type = e.target.type\r\n        const tag = e.target.tag.value\r\n        const value = e.target.value.value\r\n        const background = e.target.background.value\r\n        const color = e.target.color.value\r\n        const marginTop = e.target.marginTop.value\r\n        const marginBottom = e.target.marginBottom.value\r\n\r\n        const styles = {\r\n            background,\r\n            color,\r\n            'margin-top': marginTop,\r\n            'margin-bottom': marginBottom,\r\n        }\r\n\r\n        let newBlock\r\n\r\n        if (type === 'text') {\r\n            newBlock = new TextBlock(value, { tag, styles })\r\n        }\r\n\r\n        this.update(newBlock)\r\n\r\n        e.target.value.value = ''\r\n        e.target.styles = {}\r\n    }\r\n}\r\n\r\n","import { Site } from './site'\r\nimport { Sidebar } from './sidebar'\r\n\r\nexport class App {\r\n    constructor(model) {\r\n        this.model = model\r\n    }\r\n\r\n    init() {\r\n        const site = new Site('#site')\r\n\r\n        site.render(this.model)\r\n\r\n        const updateCallback = newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        }\r\n        new Sidebar('#panel', updateCallback)\r\n    }\r\n}","import { model } from './model'\r\nimport { App } from './classes/app'\r\n\r\nimport './styles'\r\n\r\n\r\nnew App(model).init()","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}